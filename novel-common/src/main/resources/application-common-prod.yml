spring:
  profiles:
    include: [common]
  main:
    allow-bean-definition-overriding: true
  #Redis IP server
  redis:
    host: 127.0.0.1
    #Redis port koneksi server
    port: 6379
    #Redis kata sandi koneksi server
    password: iamalone0
    jedis:
      pool:
        #Jumlah maksimum koneksi di kumpulan koneksi (gunakan nilai negatif untuk menunjukkan bahwa tidak ada batasan)
        max-active: 8
        #Waktu tunggu pemblokiran maksimum dari kumpulan koneksi (gunakan nilai negatif untuk menunjukkan bahwa tidak ada batasan)
        max-wait: 1
        #Waktu tunggu pemblokiran maksimum dari kumpulan koneksi (gunakan nilai negatif untuk menunjukkan bahwa tidak ada batasan)
        max-idle: 8
        #Koneksi idle terkecil di kumpulan koneksi
        min-idle: 0
    #Waktu koneksi habis (milidetik)
    timeout: 30000
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/novelplus?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver


####Saat menggunakan shardingJdbcï¼Œ
####Semua jdbcType tidak boleh LONGVARCHAR, jika tidak maka akan menyebabkan kesalahan java.io.NotSerializableException: java.io.StringReader
##### Harus mengganti semua tipe LONGVARCHAR dengan VARCHAR

sharding:
  jdbc:
    datasource:
      names: ds0 #,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/novelplus?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password:
    #      ds1:
    #        type: com.alibaba.druid.pool.DruidDataSource
    #        driver-class-name: com.mysql.jdbc.Driver
    #        url: jdbc:mysql://localhost:3306/novel_plus2
    #        username: root
    #        password: test123456
    config:
      sharding:
        props:
          sql.show: true
        tables:
          book_content:  #book_content tabel
            key-generator-column-name: id  #Kunci utama
            actual-data-nodes: ds${0}.book_content${0..9}  #Node data
            #            database-strategy:  #Strategi sub-perpustakaan
            #              inline:
            #                sharding-column: book_id
            #                algorithm-expression: ds${book_id % 10}
            table-strategy:  #Strategi sub-tabel
              inline:
                shardingColumn: index_id
                algorithm-expression: book_content${index_id % 10}


logging:
  level:
    root: error
    com.java2nb: error









